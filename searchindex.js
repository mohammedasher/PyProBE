Search.setIndex({"alltitles": {"Accessing Data": [[44, null]], "Adding a Cycler": [[29, null]], "Adding data not from a cycler": [[46, "adding-data-not-from-a-cycler"]], "Adding data to a cell object": [[46, "adding-data-to-a-cell-object"]], "Analysing GITT data": [[35, null]], "Analysis": [[45, null]], "Analysis Class Validation": [[42, "Analysis-Class-Validation"]], "Base": [[30, "base"]], "Batch preprocessing": [[46, "batch-preprocessing"]], "Comparing PyProBE Performance": [[36, null]], "Contributing to the Analysis Module": [[30, null]], "Convert data to standard format": [[40, "Convert-data-to-standard-format"]], "Converting data to PyProBE Format": [[46, "converting-data-to-pyprobe-format"]], "Dependency Guide": [[31, null]], "Developer Guide": [[32, null]], "Differentiating voltage data": [[37, null]], "Differentiating with the LEAN algorithm": [[34, null]], "Examples": [[38, null]], "Filtering": [[44, "filtering"]], "Filtering data": [[39, null]], "Getting started with PyProBE": [[40, null]], "Importing Data": [[46, null]], "Input Data Guidance": [[47, null]], "Installation": [[33, null], [48, null]], "Introduction": [[49, null]], "Making a cell object": [[46, "making-a-cell-object"]], "Methods": [[30, "methods"]], "OCV Fitting": [[41, null]], "Plotting": [[50, null]], "Polars": [[31, "polars"]], "Providing Valid Inputs": [[42, null]], "PyProBE Structure": [[49, "pyprobe-structure"]], "PyProBE data columns": [[47, "pyprobe-data-columns"]], "PyProBE documentation": [[43, null]], "Pydantic": [[31, "pydantic"]], "RawData Validation": [[42, "RawData-Validation"]], "RawData objects": [[44, "rawdata-objects"]], "Setup": [[30, "setup"]], "Shortcuts": [[52, "shortcuts"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [13, "submodules"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"]], "Supported cyclers and formats": [[47, "supported-cyclers-and-formats"]], "The PyProBE README format": [[52, "the-pyprobe-readme-format"]], "The YAML format": [[52, "the-yaml-format"]], "This documentation": [[49, "this-documentation"]], "User Guide": [[51, null]], "Working with multiple input files": [[46, "working-with-multiple-input-files"]], "Writing a README file": [[52, null]], "Writing an Experiment record": [[53, null]], "pyprobe": [[0, null]], "pyprobe package": [[1, null]], "pyprobe.analysis package": [[2, null]], "pyprobe.analysis.base package": [[3, null]], "pyprobe.analysis.base.degradation_mode_analysis_functions module": [[4, null]], "pyprobe.analysis.base.differentiation_functions module": [[5, null]], "pyprobe.analysis.cycling module": [[6, null]], "pyprobe.analysis.degradation_mode_analysis module": [[7, null]], "pyprobe.analysis.differentiation module": [[8, null]], "pyprobe.analysis.pulsing module": [[9, null]], "pyprobe.analysis.smoothing module": [[10, null]], "pyprobe.analysis.utils module": [[11, null]], "pyprobe.cell module": [[12, null]], "pyprobe.cyclers package": [[13, null]], "pyprobe.cyclers.arbin module": [[14, null]], "pyprobe.cyclers.basecycler module": [[15, null]], "pyprobe.cyclers.basytec module": [[16, null]], "pyprobe.cyclers.biologic module": [[17, null]], "pyprobe.cyclers.maccor module": [[18, null]], "pyprobe.cyclers.neware module": [[19, null]], "pyprobe.dashboard module": [[20, null]], "pyprobe.filters module": [[21, null]], "pyprobe.plot module": [[22, null]], "pyprobe.rawdata module": [[23, null]], "pyprobe.readme_processor module": [[24, null]], "pyprobe.result module": [[25, null]], "pyprobe.typing module": [[26, null]], "pyprobe.units module": [[27, null]], "pyprobe.utils module": [[28, null]]}, "docnames": ["api/modules", "api/pyprobe", "api/pyprobe.analysis", "api/pyprobe.analysis.base", "api/pyprobe.analysis.base.degradation_mode_analysis_functions", "api/pyprobe.analysis.base.differentiation_functions", "api/pyprobe.analysis.cycling", "api/pyprobe.analysis.degradation_mode_analysis", "api/pyprobe.analysis.differentiation", "api/pyprobe.analysis.pulsing", "api/pyprobe.analysis.smoothing", "api/pyprobe.analysis.utils", "api/pyprobe.cell", "api/pyprobe.cyclers", "api/pyprobe.cyclers.arbin", "api/pyprobe.cyclers.basecycler", "api/pyprobe.cyclers.basytec", "api/pyprobe.cyclers.biologic", "api/pyprobe.cyclers.maccor", "api/pyprobe.cyclers.neware", "api/pyprobe.dashboard", "api/pyprobe.filters", "api/pyprobe.plot", "api/pyprobe.rawdata", "api/pyprobe.readme_processor", "api/pyprobe.result", "api/pyprobe.typing", "api/pyprobe.units", "api/pyprobe.utils", "developer_guide/adding_a_cycler", "developer_guide/contributing_to_the_analysis_module", "developer_guide/dependency_guide", "developer_guide/developer_guide", "developer_guide/developer_installation", "examples/LEAN-differentiation", "examples/analysing-GITT-data", "examples/comparing-pyprobe-performance", "examples/differentiating-voltage-data", "examples/examples", "examples/filtering-data", "examples/getting-started", "examples/ocv-fitting", "examples/providing-valid-inputs", "index", "user_guide/accessing_data", "user_guide/analysis", "user_guide/importing_data", "user_guide/input_data_guidance", "user_guide/installation", "user_guide/introduction", "user_guide/plotting", "user_guide/user_guide", "user_guide/writing_a_readme_file", "user_guide/writing_an_experiment_record"], "envversion": {"nbsphinx": 4, "sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["api/modules.rst", "api/pyprobe.rst", "api/pyprobe.analysis.rst", "api/pyprobe.analysis.base.rst", "api/pyprobe.analysis.base.degradation_mode_analysis_functions.rst", "api/pyprobe.analysis.base.differentiation_functions.rst", "api/pyprobe.analysis.cycling.rst", "api/pyprobe.analysis.degradation_mode_analysis.rst", "api/pyprobe.analysis.differentiation.rst", "api/pyprobe.analysis.pulsing.rst", "api/pyprobe.analysis.smoothing.rst", "api/pyprobe.analysis.utils.rst", "api/pyprobe.cell.rst", "api/pyprobe.cyclers.rst", "api/pyprobe.cyclers.arbin.rst", "api/pyprobe.cyclers.basecycler.rst", "api/pyprobe.cyclers.basytec.rst", "api/pyprobe.cyclers.biologic.rst", "api/pyprobe.cyclers.maccor.rst", "api/pyprobe.cyclers.neware.rst", "api/pyprobe.dashboard.rst", "api/pyprobe.filters.rst", "api/pyprobe.plot.rst", "api/pyprobe.rawdata.rst", "api/pyprobe.readme_processor.rst", "api/pyprobe.result.rst", "api/pyprobe.typing.rst", "api/pyprobe.units.rst", "api/pyprobe.utils.rst", "developer_guide/adding_a_cycler.rst", "developer_guide/contributing_to_the_analysis_module.rst", "developer_guide/dependency_guide.rst", "developer_guide/developer_guide.rst", "developer_guide/developer_installation.rst", "examples/LEAN-differentiation.ipynb", "examples/analysing-GITT-data.ipynb", "examples/comparing-pyprobe-performance.ipynb", "examples/differentiating-voltage-data.ipynb", "examples/examples.rst", "examples/filtering-data.ipynb", "examples/getting-started.ipynb", "examples/ocv-fitting.ipynb", "examples/providing-valid-inputs.ipynb", "index.rst", "user_guide/accessing_data.rst", "user_guide/analysis.rst", "user_guide/importing_data.rst", "user_guide/input_data_guidance.rst", "user_guide/installation.rst", "user_guide/introduction.rst", "user_guide/plotting.rst", "user_guide/user_guide.rst", "user_guide/writing_a_readme_file.rst", "user_guide/writing_an_experiment_record.rst"], "indexentries": {"add_colorbar() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_colorbar", false]], "add_colorscaled_line() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_colorscaled_line", false]], "add_external_data() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.add_external_data", false]], "add_line() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.add_line", false]], "add_new_data_columns() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.add_new_data_columns", false]], "add_procedure() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.add_procedure", false]], "apply_step_correction() (pyprobe.cyclers.biologic.biologicmb static method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.apply_step_correction", false]], "archive() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.archive", false]], "array() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.array", false]], "assemble_array() (in module pyprobe.analysis.utils)": [[11, "pyprobe.analysis.utils.assemble_array", false]], "average_ocv_curves() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.average_OCV_curves", false]], "average_ocvs() (pyprobe.analysis.degradation_mode_analysis.dma static method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.average_ocvs", false]], "axis_font_size (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.axis_font_size", false]], "base_dataframe (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.base_dataframe", false]], "build() (pyprobe.result.result class method)": [[25, "pyprobe.result.Result.build", false]], "calc_electrode_capacities() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_electrode_capacities", false]], "calc_full_cell_ocv() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calc_full_cell_OCV", false]], "calc_gradient_with_lean() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.calc_gradient_with_LEAN", false]], "calculate_dma_parameters() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.calculate_dma_parameters", false]], "capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity", false]], "capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.capacity", false]], "capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.capacity", false]], "capacity (pyprobe.rawdata.rawdata property)": [[23, "pyprobe.rawdata.RawData.capacity", false]], "capacity_from_ch_dch (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.capacity_from_ch_dch", false]], "charge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.charge", false]], "charge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.charge", false]], "charge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.charge", false]], "charge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.charge_capacity", false]], "charge_capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.charge_capacity", false]], "charge_capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.charge_capacity", false]], "chargeordischarge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.chargeordischarge", false]], "chargeordischarge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.chargeordischarge", false]], "check_and_set_name() (pyprobe.cell.cell class method)": [[12, "pyprobe.cell.Cell.check_and_set_name", false]], "check_required_columns() (pyprobe.rawdata.rawdata class method)": [[23, "pyprobe.rawdata.RawData.check_required_columns", false]], "clean_copy() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.clean_copy", false]], "column_definitions (pyprobe.rawdata.rawdata attribute)": [[23, "pyprobe.rawdata.RawData.column_definitions", false]], "column_definitions (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.column_definitions", false]], "column_dict (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.column_dict", false]], "column_dict (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.column_dict", false]], "column_dict (pyprobe.cyclers.basytec.basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.column_dict", false]], "column_dict (pyprobe.cyclers.biologic.biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.column_dict", false]], "column_dict (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.column_dict", false]], "column_dict (pyprobe.cyclers.neware.neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.column_dict", false]], "column_list (pyprobe.result.result property)": [[25, "pyprobe.result.Result.column_list", false]], "constant_current() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.constant_current", false]], "constant_current() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.constant_current", false]], "constant_current() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.constant_current", false]], "constant_current() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.constant_current", false]], "constant_voltage() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.constant_voltage", false]], "constant_voltage() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.constant_voltage", false]], "constant_voltage() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.constant_voltage", false]], "constant_voltage() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.constant_voltage", false]], "contains_lazyframe (pyprobe.result.result property)": [[25, "pyprobe.result.Result.contains_lazyframe", false]], "current (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.current", false]], "cycle() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.cycle", false]], "cycle() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.cycle", false]], "cycle_info (pyprobe.filters.cycle attribute)": [[21, "pyprobe.filters.Cycle.cycle_info", false]], "cycle_info (pyprobe.filters.experiment attribute)": [[21, "pyprobe.filters.Experiment.cycle_info", false]], "cycle_info (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.cycle_info", false]], "data (pyprobe.result.result property)": [[25, "pyprobe.result.Result.data", false]], "date (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.date", false]], "date (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.date", false]], "datetime_format (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.datetime_format", false]], "datetime_format (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.datetime_format", false]], "datetime_format (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.datetime_format", false]], "default_layout (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.default_layout", false]], "define_column() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.define_column", false]], "differentiate_fd() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_FD", false]], "differentiate_lean() (pyprobe.analysis.differentiation.differentiation method)": [[8, "pyprobe.analysis.differentiation.Differentiation.differentiate_LEAN", false]], "discharge() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.discharge", false]], "discharge() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.discharge", false]], "discharge() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.discharge", false]], "discharge_capacity (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.discharge_capacity", false]], "discharge_capacity (pyprobe.cyclers.maccor.maccor property)": [[18, "pyprobe.cyclers.maccor.Maccor.discharge_capacity", false]], "discharge_capacity (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.discharge_capacity", false]], "dma_result (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.dma_result", false]], "event (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.event", false]], "experiment() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.experiment", false]], "experiment_names (pyprobe.filters.procedure property)": [[21, "pyprobe.filters.Procedure.experiment_names", false]], "experimentorcycletype (in module pyprobe.typing)": [[26, "pyprobe.typing.ExperimentOrCycleType", false]], "fig (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.fig", false]], "filtertocycletype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToCycleType", false]], "filtertoexperimenttype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToExperimentType", false]], "filtertosteptype (in module pyprobe.typing)": [[26, "pyprobe.typing.FilterToStepType", false]], "fit_ocv() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fit_ocv", false]], "fitted_ocv (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.fitted_OCV", false]], "flatten_list() (in module pyprobe.utils)": [[28, "pyprobe.utils.flatten_list", false]], "from_default_unit() (pyprobe.units.units method)": [[27, "pyprobe.units.Units.from_default_unit", false]], "get() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.get", false]], "get_cycle_column() (in module pyprobe.filters)": [[21, "pyprobe.filters.get_cycle_column", false]], "get_dx() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dx", false]], "get_dy_and_counts() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_dy_and_counts", false]], "get_imported_dataframe() (pyprobe.cyclers.basecycler.basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.get_imported_dataframe", false]], "get_imported_dataframe() (pyprobe.cyclers.biologic.biologicmb method)": [[17, "pyprobe.cyclers.biologic.BiologicMB.get_imported_dataframe", false]], "get_only() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.get_only", false]], "get_x_sections() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.get_x_sections", false]], "import_and_validate_data() (pyprobe.cyclers.basecycler.basecycler method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.import_and_validate_data", false]], "import_pybamm_solution() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.import_pybamm_solution", false]], "info (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.info", false]], "info (pyprobe.result.result attribute)": [[25, "pyprobe.result.Result.info", false]], "input_data (pyprobe.analysis.cycling.cycling attribute)": [[6, "pyprobe.analysis.cycling.Cycling.input_data", false]], "input_data (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.input_data", false]], "input_data (pyprobe.analysis.differentiation.differentiation attribute)": [[8, "pyprobe.analysis.differentiation.Differentiation.input_data", false]], "input_data (pyprobe.analysis.pulsing.pulsing attribute)": [[9, "pyprobe.analysis.pulsing.Pulsing.input_data", false]], "input_data (pyprobe.analysis.smoothing.smoothing attribute)": [[10, "pyprobe.analysis.smoothing.Smoothing.input_data", false]], "input_data (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.input_data", false]], "input_data_path (pyprobe.cyclers.arbin.arbin attribute)": [[14, "pyprobe.cyclers.arbin.Arbin.input_data_path", false]], "input_data_path (pyprobe.cyclers.basecycler.basecycler attribute)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.input_data_path", false]], "input_data_path (pyprobe.cyclers.basytec.basytec attribute)": [[16, "pyprobe.cyclers.basytec.Basytec.input_data_path", false]], "input_data_path (pyprobe.cyclers.biologic.biologic attribute)": [[17, "pyprobe.cyclers.biologic.Biologic.input_data_path", false]], "input_data_path (pyprobe.cyclers.maccor.maccor attribute)": [[18, "pyprobe.cyclers.maccor.Maccor.input_data_path", false]], "input_data_path (pyprobe.cyclers.neware.neware attribute)": [[19, "pyprobe.cyclers.neware.Neware.input_data_path", false]], "launch_dashboard() (in module pyprobe.dashboard)": [[20, "pyprobe.dashboard.launch_dashboard", false]], "level_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.level_smoothing", false]], "load_archive() (in module pyprobe.cell)": [[12, "pyprobe.cell.load_archive", false]], "load_external_file() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.load_external_file", false]], "make_cell_list() (in module pyprobe.cell)": [[12, "pyprobe.cell.make_cell_list", false]], "make_colorscale() (pyprobe.plot.plot static method)": [[22, "pyprobe.plot.Plot.make_colorscale", false]], "module": [[1, "module-pyprobe", false], [2, "module-pyprobe.analysis", false], [3, "module-pyprobe.analysis.base", false], [4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false], [5, "module-pyprobe.analysis.base.differentiation_functions", false], [6, "module-pyprobe.analysis.cycling", false], [7, "module-pyprobe.analysis.degradation_mode_analysis", false], [8, "module-pyprobe.analysis.differentiation", false], [9, "module-pyprobe.analysis.pulsing", false], [10, "module-pyprobe.analysis.smoothing", false], [11, "module-pyprobe.analysis.utils", false], [12, "module-pyprobe.cell", false], [13, "module-pyprobe.cyclers", false], [14, "module-pyprobe.cyclers.arbin", false], [15, "module-pyprobe.cyclers.basecycler", false], [16, "module-pyprobe.cyclers.basytec", false], [17, "module-pyprobe.cyclers.biologic", false], [18, "module-pyprobe.cyclers.maccor", false], [19, "module-pyprobe.cyclers.neware", false], [20, "module-pyprobe.dashboard", false], [21, "module-pyprobe.filters", false], [22, "module-pyprobe.plot", false], [23, "module-pyprobe.rawdata", false], [24, "module-pyprobe.readme_processor", false], [25, "module-pyprobe.result", false], [26, "module-pyprobe.typing", false], [27, "module-pyprobe.units", false], [28, "module-pyprobe.utils", false]], "ocv_curve_fit() (in module pyprobe.analysis.base.degradation_mode_analysis_functions)": [[4, "pyprobe.analysis.base.degradation_mode_analysis_functions.ocv_curve_fit", false]], "plot (class in pyprobe.plot)": [[22, "pyprobe.plot.Plot", false]], "prefix_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.prefix_dict", false]], "print_definitions() (pyprobe.result.result method)": [[25, "pyprobe.result.Result.print_definitions", false]], "procedure (pyprobe.cell.cell attribute)": [[12, "pyprobe.cell.Cell.procedure", false]], "process_cycler_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_cycler_file", false]], "process_generic_file() (pyprobe.cell.cell method)": [[12, "pyprobe.cell.Cell.process_generic_file", false]], "process_readme() (in module pyprobe.readme_processor)": [[24, "pyprobe.readme_processor.process_readme", false]], "pulse() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse", false]], "pulse_rest() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_rest", false]], "pulse_summary() (pyprobe.analysis.pulsing.pulsing method)": [[9, "pyprobe.analysis.pulsing.Pulsing.pulse_summary", false]], "pybamm_experiment (pyprobe.rawdata.rawdata property)": [[23, "pyprobe.rawdata.RawData.pybamm_experiment", false]], "pyprobe": [[1, "module-pyprobe", false]], "pyprobe.analysis": [[2, "module-pyprobe.analysis", false]], "pyprobe.analysis.base": [[3, "module-pyprobe.analysis.base", false]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, "module-pyprobe.analysis.base.degradation_mode_analysis_functions", false]], "pyprobe.analysis.base.differentiation_functions": [[5, "module-pyprobe.analysis.base.differentiation_functions", false]], "pyprobe.analysis.cycling": [[6, "module-pyprobe.analysis.cycling", false]], "pyprobe.analysis.degradation_mode_analysis": [[7, "module-pyprobe.analysis.degradation_mode_analysis", false]], "pyprobe.analysis.differentiation": [[8, "module-pyprobe.analysis.differentiation", false]], "pyprobe.analysis.pulsing": [[9, "module-pyprobe.analysis.pulsing", false]], "pyprobe.analysis.smoothing": [[10, "module-pyprobe.analysis.smoothing", false]], "pyprobe.analysis.utils": [[11, "module-pyprobe.analysis.utils", false]], "pyprobe.cell": [[12, "module-pyprobe.cell", false]], "pyprobe.cyclers": [[13, "module-pyprobe.cyclers", false]], "pyprobe.cyclers.arbin": [[14, "module-pyprobe.cyclers.arbin", false]], "pyprobe.cyclers.basecycler": [[15, "module-pyprobe.cyclers.basecycler", false]], "pyprobe.cyclers.basytec": [[16, "module-pyprobe.cyclers.basytec", false]], "pyprobe.cyclers.biologic": [[17, "module-pyprobe.cyclers.biologic", false]], "pyprobe.cyclers.maccor": [[18, "module-pyprobe.cyclers.maccor", false]], "pyprobe.cyclers.neware": [[19, "module-pyprobe.cyclers.neware", false]], "pyprobe.dashboard": [[20, "module-pyprobe.dashboard", false]], "pyprobe.filters": [[21, "module-pyprobe.filters", false]], "pyprobe.plot": [[22, "module-pyprobe.plot", false]], "pyprobe.rawdata": [[23, "module-pyprobe.rawdata", false]], "pyprobe.readme_processor": [[24, "module-pyprobe.readme_processor", false]], "pyprobe.result": [[25, "module-pyprobe.result", false]], "pyprobe.typing": [[26, "module-pyprobe.typing", false]], "pyprobe.units": [[27, "module-pyprobe.units", false]], "pyprobe.utils": [[28, "module-pyprobe.utils", false]], "pyprobe_dataframe (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.pyprobe_dataframe", false]], "pyprobedatatype (in module pyprobe.typing)": [[26, "pyprobe.typing.PyProBEDataType", false]], "pyproberawdatatype (in module pyprobe.typing)": [[26, "pyprobe.typing.PyProBERawDataType", false]], "quantify_degradation_modes() (pyprobe.analysis.degradation_mode_analysis.dma method)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.quantify_degradation_modes", false]], "quantities (pyprobe.result.result property)": [[25, "pyprobe.result.Result.quantities", false]], "read_file() (pyprobe.cyclers.basecycler.basecycler static method)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.read_file", false]], "read_file() (pyprobe.cyclers.basytec.basytec static method)": [[16, "pyprobe.cyclers.basytec.Basytec.read_file", false]], "read_file() (pyprobe.cyclers.biologic.biologic static method)": [[17, "pyprobe.cyclers.biologic.Biologic.read_file", false]], "read_file() (pyprobe.cyclers.maccor.maccor static method)": [[18, "pyprobe.cyclers.maccor.Maccor.read_file", false]], "read_file() (pyprobe.cyclers.neware.neware static method)": [[19, "pyprobe.cyclers.neware.Neware.read_file", false]], "readme_dict (pyprobe.filters.procedure attribute)": [[21, "pyprobe.filters.Procedure.readme_dict", false]], "readmemodel (class in pyprobe.readme_processor)": [[24, "pyprobe.readme_processor.ReadmeModel", false]], "remove_experiment() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.remove_experiment", false]], "required_columns (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_columns", false]], "required_type (pyprobe.analysis.utils.analysisvalidator attribute)": [[11, "pyprobe.analysis.utils.AnalysisValidator.required_type", false]], "rest() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.rest", false]], "rest() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.rest", false]], "rest() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.rest", false]], "savgol_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.savgol_smoothing", false]], "set_reference_capacity() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.set_reference_capacity", false]], "set_soc() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.set_SOC", false]], "show() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.show", false]], "show_image() (pyprobe.plot.plot method)": [[22, "pyprobe.plot.Plot.show_image", false]], "smooth_gradient() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.smooth_gradient", false]], "spline_smoothing() (pyprobe.analysis.smoothing.smoothing method)": [[10, "pyprobe.analysis.smoothing.Smoothing.spline_smoothing", false]], "step (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.step", false]], "step() (pyprobe.filters.cycle method)": [[21, "pyprobe.filters.Cycle.step", false]], "step() (pyprobe.filters.experiment method)": [[21, "pyprobe.filters.Experiment.step", false]], "step() (pyprobe.filters.procedure method)": [[21, "pyprobe.filters.Procedure.step", false]], "step() (pyprobe.filters.step method)": [[21, "pyprobe.filters.Step.step", false]], "step_descriptions (pyprobe.rawdata.rawdata attribute)": [[23, "pyprobe.rawdata.RawData.step_descriptions", false]], "stoichiometry_limits (pyprobe.analysis.degradation_mode_analysis.dma attribute)": [[7, "pyprobe.analysis.degradation_mode_analysis.DMA.stoichiometry_limits", false]], "summary() (pyprobe.analysis.cycling.cycling method)": [[6, "pyprobe.analysis.cycling.Cycling.summary", false]], "temperature (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.temperature", false]], "time (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.time", false]], "time (pyprobe.cyclers.neware.neware property)": [[19, "pyprobe.cyclers.neware.Neware.time", false]], "time_unit_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.time_unit_dict", false]], "title_font_size (pyprobe.plot.plot attribute)": [[22, "pyprobe.plot.Plot.title_font_size", false]], "to_default_unit() (pyprobe.units.units method)": [[27, "pyprobe.units.Units.to_default_unit", false]], "unit_dict (pyprobe.units.units attribute)": [[27, "pyprobe.units.Units.unit_dict", false]], "unit_from_regexp() (in module pyprobe.units)": [[27, "pyprobe.units.unit_from_regexp", false]], "units (class in pyprobe.units)": [[27, "pyprobe.units.Units", false]], "validate_input_data_type() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_input_data_type", false]], "validate_required_columns() (pyprobe.analysis.utils.analysisvalidator method)": [[11, "pyprobe.analysis.utils.AnalysisValidator.validate_required_columns", false]], "variables (pyprobe.analysis.utils.analysisvalidator property)": [[11, "pyprobe.analysis.utils.AnalysisValidator.variables", false]], "voltage (pyprobe.cyclers.basecycler.basecycler property)": [[15, "pyprobe.cyclers.basecycler.BaseCycler.voltage", false]], "x_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.x_range", false]], "y2_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.y2_range", false]], "y_range (pyprobe.plot.plot property)": [[22, "pyprobe.plot.Plot.y_range", false]], "y_sampling_interval() (in module pyprobe.analysis.base.differentiation_functions)": [[5, "pyprobe.analysis.base.differentiation_functions.y_sampling_interval", false]], "zero_column() (pyprobe.rawdata.rawdata method)": [[23, "pyprobe.rawdata.RawData.zero_column", false]]}, "objects": {"": [[1, 0, 0, "-", "pyprobe"]], "pyprobe": [[2, 0, 0, "-", "analysis"], [12, 0, 0, "-", "cell"], [13, 0, 0, "-", "cyclers"], [20, 0, 0, "-", "dashboard"], [21, 0, 0, "-", "filters"], [22, 0, 0, "-", "plot"], [23, 0, 0, "-", "rawdata"], [24, 0, 0, "-", "readme_processor"], [25, 0, 0, "-", "result"], [26, 0, 0, "-", "typing"], [27, 0, 0, "-", "units"], [28, 0, 0, "-", "utils"]], "pyprobe.analysis": [[3, 0, 0, "-", "base"], [6, 0, 0, "-", "cycling"], [7, 0, 0, "-", "degradation_mode_analysis"], [8, 0, 0, "-", "differentiation"], [9, 0, 0, "-", "pulsing"], [10, 0, 0, "-", "smoothing"], [11, 0, 0, "-", "utils"]], "pyprobe.analysis.base": [[4, 0, 0, "-", "degradation_mode_analysis_functions"], [5, 0, 0, "-", "differentiation_functions"]], "pyprobe.analysis.base.degradation_mode_analysis_functions": [[4, 1, 1, "", "average_OCV_curves"], [4, 1, 1, "", "calc_electrode_capacities"], [4, 1, 1, "", "calc_full_cell_OCV"], [4, 1, 1, "", "calculate_dma_parameters"], [4, 1, 1, "", "ocv_curve_fit"]], "pyprobe.analysis.base.differentiation_functions": [[5, 1, 1, "", "calc_gradient_with_LEAN"], [5, 1, 1, "", "get_dx"], [5, 1, 1, "", "get_dy_and_counts"], [5, 1, 1, "", "get_x_sections"], [5, 1, 1, "", "smooth_gradient"], [5, 1, 1, "", "y_sampling_interval"]], "pyprobe.analysis.cycling": [[6, 2, 1, "", "Cycling"]], "pyprobe.analysis.cycling.Cycling": [[6, 3, 1, "", "input_data"], [6, 4, 1, "", "summary"]], "pyprobe.analysis.degradation_mode_analysis": [[7, 2, 1, "", "DMA"]], "pyprobe.analysis.degradation_mode_analysis.DMA": [[7, 4, 1, "", "average_ocvs"], [7, 3, 1, "", "dma_result"], [7, 4, 1, "", "fit_ocv"], [7, 3, 1, "", "fitted_OCV"], [7, 3, 1, "", "input_data"], [7, 4, 1, "", "quantify_degradation_modes"], [7, 3, 1, "", "stoichiometry_limits"]], "pyprobe.analysis.differentiation": [[8, 2, 1, "", "Differentiation"]], "pyprobe.analysis.differentiation.Differentiation": [[8, 4, 1, "", "differentiate_FD"], [8, 4, 1, "", "differentiate_LEAN"], [8, 3, 1, "", "input_data"]], "pyprobe.analysis.pulsing": [[9, 2, 1, "", "Pulsing"]], "pyprobe.analysis.pulsing.Pulsing": [[9, 3, 1, "", "input_data"], [9, 4, 1, "", "pulse"], [9, 4, 1, "", "pulse_rest"], [9, 4, 1, "", "pulse_summary"]], "pyprobe.analysis.smoothing": [[10, 2, 1, "", "Smoothing"]], "pyprobe.analysis.smoothing.Smoothing": [[10, 3, 1, "", "input_data"], [10, 4, 1, "", "level_smoothing"], [10, 4, 1, "", "savgol_smoothing"], [10, 4, 1, "", "spline_smoothing"]], "pyprobe.analysis.utils": [[11, 2, 1, "", "AnalysisValidator"], [11, 1, 1, "", "assemble_array"]], "pyprobe.analysis.utils.AnalysisValidator": [[11, 3, 1, "", "input_data"], [11, 3, 1, "", "required_columns"], [11, 3, 1, "", "required_type"], [11, 5, 1, "", "validate_input_data_type"], [11, 5, 1, "", "validate_required_columns"], [11, 6, 1, "", "variables"]], "pyprobe.cell": [[12, 2, 1, "", "Cell"], [12, 1, 1, "", "load_archive"], [12, 1, 1, "", "make_cell_list"]], "pyprobe.cell.Cell": [[12, 4, 1, "", "add_procedure"], [12, 4, 1, "", "archive"], [12, 5, 1, "", "check_and_set_name"], [12, 4, 1, "", "import_pybamm_solution"], [12, 3, 1, "", "info"], [12, 3, 1, "", "procedure"], [12, 4, 1, "", "process_cycler_file"], [12, 4, 1, "", "process_generic_file"]], "pyprobe.cyclers": [[14, 0, 0, "-", "arbin"], [15, 0, 0, "-", "basecycler"], [16, 0, 0, "-", "basytec"], [17, 0, 0, "-", "biologic"], [18, 0, 0, "-", "maccor"], [19, 0, 0, "-", "neware"]], "pyprobe.cyclers.arbin": [[14, 2, 1, "", "Arbin"]], "pyprobe.cyclers.arbin.Arbin": [[14, 3, 1, "", "column_dict"], [14, 3, 1, "", "datetime_format"], [14, 3, 1, "", "input_data_path"]], "pyprobe.cyclers.basecycler": [[15, 2, 1, "", "BaseCycler"]], "pyprobe.cyclers.basecycler.BaseCycler": [[15, 6, 1, "", "capacity"], [15, 6, 1, "", "capacity_from_ch_dch"], [15, 6, 1, "", "charge_capacity"], [15, 3, 1, "", "column_dict"], [15, 6, 1, "", "current"], [15, 6, 1, "", "date"], [15, 3, 1, "", "datetime_format"], [15, 6, 1, "", "discharge_capacity"], [15, 6, 1, "", "event"], [15, 4, 1, "", "get_imported_dataframe"], [15, 5, 1, "", "import_and_validate_data"], [15, 3, 1, "", "input_data_path"], [15, 6, 1, "", "pyprobe_dataframe"], [15, 4, 1, "", "read_file"], [15, 6, 1, "", "step"], [15, 6, 1, "", "temperature"], [15, 6, 1, "", "time"], [15, 6, 1, "", "voltage"]], "pyprobe.cyclers.basytec": [[16, 2, 1, "", "Basytec"]], "pyprobe.cyclers.basytec.Basytec": [[16, 3, 1, "", "column_dict"], [16, 3, 1, "", "input_data_path"], [16, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic": [[17, 2, 1, "", "Biologic"], [17, 2, 1, "", "BiologicMB"]], "pyprobe.cyclers.biologic.Biologic": [[17, 3, 1, "", "column_dict"], [17, 3, 1, "", "input_data_path"], [17, 4, 1, "", "read_file"]], "pyprobe.cyclers.biologic.BiologicMB": [[17, 4, 1, "", "apply_step_correction"], [17, 4, 1, "", "get_imported_dataframe"]], "pyprobe.cyclers.maccor": [[18, 2, 1, "", "Maccor"]], "pyprobe.cyclers.maccor.Maccor": [[18, 6, 1, "", "capacity"], [18, 6, 1, "", "charge_capacity"], [18, 3, 1, "", "column_dict"], [18, 6, 1, "", "date"], [18, 3, 1, "", "datetime_format"], [18, 6, 1, "", "discharge_capacity"], [18, 3, 1, "", "input_data_path"], [18, 4, 1, "", "read_file"]], "pyprobe.cyclers.neware": [[19, 2, 1, "", "Neware"]], "pyprobe.cyclers.neware.Neware": [[19, 6, 1, "", "capacity"], [19, 6, 1, "", "charge_capacity"], [19, 3, 1, "", "column_dict"], [19, 6, 1, "", "discharge_capacity"], [19, 3, 1, "", "input_data_path"], [19, 4, 1, "", "read_file"], [19, 6, 1, "", "time"]], "pyprobe.dashboard": [[20, 1, 1, "", "launch_dashboard"]], "pyprobe.filters": [[21, 2, 1, "", "Cycle"], [21, 2, 1, "", "Experiment"], [21, 2, 1, "", "Procedure"], [21, 2, 1, "", "Step"], [21, 1, 1, "", "get_cycle_column"]], "pyprobe.filters.Cycle": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Experiment": [[21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Procedure": [[21, 4, 1, "", "add_external_data"], [21, 4, 1, "", "charge"], [21, 4, 1, "", "chargeordischarge"], [21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "cycle"], [21, 3, 1, "", "cycle_info"], [21, 4, 1, "", "discharge"], [21, 4, 1, "", "experiment"], [21, 6, 1, "", "experiment_names"], [21, 4, 1, "", "load_external_file"], [21, 3, 1, "", "readme_dict"], [21, 4, 1, "", "remove_experiment"], [21, 4, 1, "", "rest"], [21, 4, 1, "", "step"]], "pyprobe.filters.Step": [[21, 4, 1, "", "constant_current"], [21, 4, 1, "", "constant_voltage"], [21, 4, 1, "", "step"]], "pyprobe.plot": [[22, 7, 1, "", "Plot"]], "pyprobe.plot.Plot": [[22, 4, 1, "", "add_colorbar"], [22, 4, 1, "", "add_colorscaled_line"], [22, 4, 1, "", "add_line"], [22, 8, 1, "", "axis_font_size"], [22, 8, 1, "", "default_layout"], [22, 6, 1, "", "fig"], [22, 4, 1, "", "make_colorscale"], [22, 4, 1, "", "show"], [22, 4, 1, "", "show_image"], [22, 8, 1, "", "title_font_size"], [22, 6, 1, "", "x_range"], [22, 6, 1, "", "y2_range"], [22, 6, 1, "", "y_range"]], "pyprobe.rawdata": [[23, 2, 1, "", "RawData"]], "pyprobe.rawdata.RawData": [[23, 6, 1, "", "capacity"], [23, 5, 1, "", "check_required_columns"], [23, 3, 1, "", "column_definitions"], [23, 6, 1, "", "pybamm_experiment"], [23, 4, 1, "", "set_SOC"], [23, 4, 1, "", "set_reference_capacity"], [23, 3, 1, "", "step_descriptions"], [23, 4, 1, "", "zero_column"]], "pyprobe.readme_processor": [[24, 7, 1, "", "ReadmeModel"], [24, 1, 1, "", "process_readme"]], "pyprobe.result": [[25, 2, 1, "", "Result"]], "pyprobe.result.Result": [[25, 4, 1, "", "add_new_data_columns"], [25, 4, 1, "", "array"], [25, 3, 1, "", "base_dataframe"], [25, 4, 1, "", "build"], [25, 4, 1, "", "clean_copy"], [25, 3, 1, "", "column_definitions"], [25, 6, 1, "", "column_list"], [25, 6, 1, "", "contains_lazyframe"], [25, 6, 1, "", "data"], [25, 4, 1, "", "define_column"], [25, 4, 1, "", "get"], [25, 4, 1, "", "get_only"], [25, 3, 1, "", "info"], [25, 4, 1, "", "print_definitions"], [25, 6, 1, "", "quantities"]], "pyprobe.typing": [[26, 9, 1, "", "ExperimentOrCycleType"], [26, 9, 1, "", "FilterToCycleType"], [26, 9, 1, "", "FilterToExperimentType"], [26, 9, 1, "", "FilterToStepType"], [26, 9, 1, "", "PyProBEDataType"], [26, 9, 1, "", "PyProBERawDataType"]], "pyprobe.units": [[27, 7, 1, "", "Units"], [27, 1, 1, "", "unit_from_regexp"]], "pyprobe.units.Units": [[27, 4, 1, "", "from_default_unit"], [27, 8, 1, "", "prefix_dict"], [27, 8, 1, "", "time_unit_dict"], [27, 4, 1, "", "to_default_unit"], [27, 8, 1, "", "unit_dict"]], "pyprobe.utils": [[28, 1, 1, "", "flatten_list"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "pydantic_model", "Python model"], "3": ["py", "pydantic_field", "Python field"], "4": ["py", "method", "Python method"], "5": ["py", "pydantic_validator", "Python validator"], "6": ["py", "property", "Python property"], "7": ["py", "class", "Python class"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "data", "Python data"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:pydantic_model", "3": "py:pydantic_field", "4": "py:method", "5": "py:pydantic_validator", "6": "py:property", "7": "py:class", "8": "py:attribute", "9": "py:data"}, "terms": {"": [10, 14, 18, 21, 23, 25, 27, 34, 36, 39, 40, 42, 43, 44, 47, 48, 50, 52, 53], "0": [8, 10, 27, 29, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 52], "000001": 40, "000002": 40, "000003": 40, "000005": 40, "00001": 40, "00004": 40, "0004": 40, "0004023": 40, "00040614": 40, "000464": 40, "001": [27, 40], "001267": 40, "002": 37, "00399931": 40, "004": 35, "00400001": 40, "00400004": 40, "008001": 35, "012001": 35, "016001": 35, "018585": 40, "02": [40, 46], "020002": 35, "020355": 40, "020356": 40, "020357": 40, "020359": 40, "02036": 40, "0205": 41, "020824": 40, "022805": 40, "024002": 35, "026056": 35, "027720": 36, "028002": 35, "03": [40, 41], "030002": 41, "030003": 41, "032002": 35, "036003": 35, "036953": 36, "04": [34, 35, 36, 37, 39, 40, 42, 46, 52], "040937": 40, "041086": 40, "041138": 40, "041241": 40, "041247": 40, "041296": 40, "04132": 40, "041329": 40, "041362": 40, "04139": 40, "041391": 40, "041392": 40, "041393": 40, "041395": 40, "0428": 41, "04478": 41, "05": 40, "06": [27, 40], "060111": 36, "0668": 8, "080534": 41, "082022": 40, "09": [7, 27, 40, 46], "0909": 41, "094": 40, "0949": 35, "0x7f04a236ac10": 36, "0x7f04a2826950": 36, "0x7f04a28aac10": 36, "0x7f46c4012390": 40, "1": [5, 7, 8, 9, 18, 27, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 48, 52], "10": [5, 7, 8, 34, 35, 36, 37, 39, 40, 41, 42, 52], "100": [35, 36, 40], "1000": [27, 41], "1000000": 27, "100051": [5, 8, 34, 37], "1016": [5, 8, 34, 37], "1059": 8, "11": [33, 36, 39, 40, 42, 48, 52], "1149": 41, "119273": 40, "12": [27, 33, 36, 39, 40, 42, 48, 52], "121": 8, "1234": [7, 41], "131485": 35, "14": [22, 36, 40, 41], "15": 41, "164407": 40, "167": 41, "17": [36, 40, 41], "1745": 8, "18": [22, 41], "19": 46, "191": 42, "1919": 35, "192": 42, "193": 42, "1945": 41, "197": 40, "1972": 8, "1d": [25, 40, 44], "1e": [27, 37], "2": [30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 50, 52], "20": [36, 39, 40, 52], "2001": 40, "2020": [5, 8, 34, 37, 41], "2023": 7, "2024": [40, 46], "21": 40, "210305": 40, "227986": 35, "23": 40, "24": 36, "2417": 8, "246969": 40, "248": 42, "2482": 41, "249": 42, "25": 8, "250": 42, "255": 42, "256": 42, "257": 42, "258": 42, "259": 42, "260": 42, "261": 42, "262": 42, "264": 42, "265": 42, "27": 41, "270001": 41, "27001": 41, "2769": 41, "28": [7, 36], "28448": 40, "28449": 40, "28450": 40, "28451": 40, "28452": 40, "2895": 40, "29": [40, 41, 46], "2962": 40, "2979": 40, "2f": 36, "3": [5, 8, 30, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 52], "30": [39, 40, 41, 52], "301386": 40, "31": 40, "3117": 41, "3120": 41, "32": 40, "324487": 35, "329627": 40, "33": 40, "333114": 36, "34": [36, 40, 42], "345855": 35, "35": 40, "36": 40, "3600": [27, 36], "3631": 41, "37": 40, "38": 40, "383": 8, "3830": 8, "39": [35, 37, 40, 41, 42], "390765": 35, "392471": 40, "393179": 40, "397": 40, "4": [30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 50, 52], "40": 40, "400785": 35, "4023": 40, "40614": 40, "41": 40, "419162": 36, "420988": 35, "4444": 41, "4513": 40, "455110": 40, "455111": 40, "455112": 40, "455113": 40, "455114": 40, "455_167": 40, "47": 40, "48": 40, "483558": 40, "483559": 40, "483560": 40, "483561": 40, "483562": 40, "4875": 41, "49": 40, "490732": 40, "495": 40, "497": 40, "4ma": [39, 40, 52], "5": [8, 30, 34, 35, 36, 37, 39, 40, 41, 42, 52], "50": 40, "500029": 41, "500425": 41, "51": 40, "5138": 41, "5164": 35, "517489": 35, "5281": 7, "554": 46, "5542": 41, "562745": 40, "562746": 40, "562747": 40, "562748": 40, "562749": 40, "565912": 35, "5711": 40, "58": 46, "5842": 41, "5866": 35, "591": 40, "6": [30, 34, 35, 36, 37, 39, 40, 41, 42, 52], "60": 27, "600": 22, "61": 40, "6103": 41, "613991": 35, "620704": 41, "621924": 41, "6334": 35, "640815": 35, "665": 35, "672765": 40, "685915": 35, "7": [8, 30, 34, 35, 36, 37, 39, 40, 41, 42, 52], "705558": 35, "705622": 35, "710493": 35, "7111": 41, "7114": 35, "7172": 40, "7197": 40, "7201": 40, "7205": 40, "7208": 40, "725532": 35, "7326": 41, "735555": 35, "735943": 35, "740624": 40, "743512": 40, "747055": 41, "747199": 41, "750596": 35, "775612": 35, "7890": 41, "789_589": 40, "795638": 35, "8": [34, 35, 36, 39, 40, 41, 42, 52], "800": 22, "8022": 35, "805578": 35, "805967": 35, "806994": 35, "8090": 41, "835632": 35, "849927": 41, "85": 41, "8538": 41, "876766": 40, "8987": 35, "899992": 41, "9": [35, 36, 39, 40, 41, 42, 52], "900012": 41, "900663": 35, "903497": 35, "910931": 35, "9159": 41, "9308": 41, "959186": 40, "973068": 36, "9793": 41, "9934": 35, "999212": 40, "99931": 40, "999406": 40, "999854": 40, "A": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 28, 29, 30, 34, 36, 37, 39, 40, 42, 44, 46, 47, 52], "And": [35, 36, 40, 41], "As": [35, 42], "BY": [34, 37], "But": 42, "By": 30, "For": [18, 19, 21, 29, 30, 40, 42, 45, 46, 48, 50, 52], "If": [5, 7, 10, 11, 12, 21, 25, 29, 30, 34, 40, 42, 46, 48, 49, 52], "In": [29, 30, 33, 41, 42, 45, 46, 48, 52], "It": [12, 23, 29, 30, 31, 33, 42, 44, 46, 48, 52, 53], "Its": 47, "No": 47, "On": [34, 48], "One": [39, 41], "Or": 44, "That": 39, "The": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53], "Then": [30, 35, 44, 49, 50], "There": 52, "These": [12, 23, 30, 40, 42, 46, 49, 52], "To": [33, 34, 35, 43, 44, 45, 48, 52], "With": [35, 36], "_": 46, "__init__": 42, "__pydantic_validator__": 42, "__tracebackhide__": 42, "_check_column_dict": [14, 15, 16, 17, 18, 19], "_check_input_data_path": [14, 15, 16, 17, 18, 19], "_load_base_datafram": [21, 23, 25], "_mb": 46, "ab9050": 41, "abl": [36, 39, 46, 47, 48], "about": [12, 25, 27, 42, 45, 46, 52, 53], "abov": [30, 34, 36, 52], "accept": 30, "access": [30, 40, 51], "achiev": 12, "acquisit": 47, "across": [22, 23, 31], "activ": [33, 48], "ad": [25, 32, 51], "add": [12, 17, 18, 21, 22, 23, 25, 29, 30, 35, 36, 40, 46, 50, 52, 53], "add_colorbar": [1, 22], "add_colorscaled_lin": [1, 22], "add_external_data": [1, 21, 46], "add_lin": [1, 22, 34, 35, 37, 39, 40, 41, 42, 50], "add_new_data_column": [1, 25], "add_procedur": [1, 12, 34, 35, 36, 37, 39, 40, 42, 46], "addit": [12, 30, 45, 46, 53], "addition": 49, "adjust": [29, 36], "after": [9, 35, 44, 46, 48], "ag": 41, "against": [36, 42], "agnost": [29, 46], "ah": [9, 16, 23, 27, 34, 35, 36, 37, 39, 40, 41, 42, 46, 47], "al": [5, 8, 34, 37], "algorithm": [4, 7, 38], "alia": [26, 36], "alias": [26, 30], "align": [34, 42], "all": [8, 10, 11, 15, 25, 29, 30, 31, 34, 36, 44, 46, 49], "allclos": 36, "allow": [21, 29, 30, 31, 34, 39, 45, 52], "alongsid": [30, 39, 40, 46, 52], "alpha": 5, "alreadi": 46, "also": [30, 35, 37, 41, 42, 45], "altern": [8, 37], "alwai": [30, 45], "amper": 47, "an": [4, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 26, 27, 29, 30, 35, 37, 42, 43, 44, 45, 46, 49, 51, 52], "anaconda": 48, "analys": [34, 37, 38, 40, 52], "analysi": [0, 1, 31, 32, 34, 35, 36, 37, 38, 40, 41, 49, 51], "analysis_object": 45, "analysisclass": 45, "analysisvalid": [1, 2, 11, 30, 31, 42], "ani": [4, 11, 12, 15, 21, 23, 24, 25, 29, 30, 33, 40, 42, 44, 45, 46, 48, 49, 50, 52], "anod": [4, 7, 30, 41], "anoth": [21, 29], "api": [43, 45], "app": 48, "appear": [39, 46], "appli": [5, 8, 21, 23, 37, 44], "applic": 34, "apply_step_correct": [13, 17], "approach": [5, 8, 34, 37, 44], "ar": [5, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 29, 30, 31, 33, 34, 35, 37, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52], "arang": 36, "arbin": [1, 13, 47], "archiv": [1, 12], "arg": [30, 42], "argsort": 36, "argument": [8, 9, 21, 35, 46, 50], "around": 36, "arrai": [1, 11, 22, 25, 30, 40, 44], "articl": [5, 8], "assembl": 11, "assemble_arrai": [1, 2, 11], "assert": 36, "assign": [12, 30, 45, 46], "assum": [5, 8, 10, 12, 46, 47], "asterisk": [12, 14, 15, 16, 17, 18, 19, 29], "astyp": 36, "attribut": [25, 30, 44, 45, 46, 49], "auto": 47, "automat": [29, 31, 33, 35, 47, 53], "aux_temperature_1": [14, 47], "avail": [12, 39, 41, 45, 48], "averag": [4, 7, 36, 42], "average_differ": 36, "average_ocv": [2, 7, 42], "average_ocv_curv": [2, 3, 4], "averaged_ocv_dma": 42, "ax1": 36, "ax2": 36, "axi": [22, 36], "axis_font_s": [1, 22], "b": 18, "back": 31, "backend": 36, "base": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 32, 37, 42, 44, 47, 50], "base_": 42, "base_datafram": [1, 21, 23, 25, 40, 41, 42, 47], "basecycl": [1, 13, 14, 16, 17, 18, 19, 29], "basemodel": [6, 7, 8, 9, 10, 11, 12, 15, 25, 29, 30, 31, 42], "basytec": [1, 13, 47], "bat": [12, 17, 46, 47], "batch": 51, "batteri": [5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 21, 29, 34, 35, 36, 37, 41, 46, 52], "batterydat": 7, "bbox_to_anchor": 36, "becaus": [36, 42], "been": [12, 21, 36, 40, 45, 46], "befor": [6, 21, 46, 48, 52], "begin": [7, 29, 34, 40, 46], "behaviour": [12, 34], "behind": [31, 36, 42], "being": [29, 48], "below": [29, 30, 34, 36, 47, 48, 49], "benefit": 36, "between": [4, 7, 10, 46], "bin": [5, 8, 33, 48], "biolog": [1, 12, 13, 29, 46, 47], "biologic_mb": [12, 46, 47], "biologicmb": [1, 13, 17, 29], "blue": [34, 35, 36, 37, 39, 42], "bool": [6, 10, 22, 25], "bor": [5, 8], "both": 42, "bound": 22, "boxplot": 36, "branch": 49, "break": [34, 35, 36, 37, 39, 40, 42, 52], "break_in": 39, "breakdown": 36, "browser": 49, "buffer": 22, "build": [1, 25, 49], "built": [30, 35, 36, 41, 46, 49, 53], "c": [27, 34, 37, 40, 47], "caihao": [5, 8], "calc_electrode_capac": [2, 3, 4, 30], "calc_full_cell_ocv": [2, 3, 4], "calc_gradient_with_lean": [2, 3, 5], "calcul": [3, 4, 5, 6, 8, 9, 15, 18, 19, 23, 30, 35, 42], "calculate_dma_paramet": [2, 3, 4], "call": [12, 21, 23, 30, 33, 35, 36, 40, 42, 44, 45, 48], "can": [8, 12, 21, 23, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52], "cap": [19, 47], "capabl": 43, "capac": [1, 4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 19, 23, 27, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 46, 47], "capacity_from_ch_dch": [13, 15], "care": 36, "carefulli": 35, "case": [29, 39, 47], "cathod": [4, 7, 30, 41], "caus": 31, "cc": [39, 52], "cc_charg": 39, "cc_discharg": 39, "cd": [33, 48, 49], "cell": [0, 1, 4, 6, 7, 9, 20, 23, 25, 30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 49, 50, 51, 52, 53], "cell_capac": [4, 30], "cell_list": [20, 46], "ch": 41, "chain": [31, 44], "chang": [7, 15, 29, 33, 40, 47], "changyong": [5, 8], "channel": [12, 34, 35, 36, 37, 39, 40, 42, 46], "characteris": 37, "charg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 23, 29, 34, 35, 39, 40, 42, 44, 45, 47, 50, 52], "charge_capac": [4, 13, 15, 18, 19], "charge_curr": 4, "charge_differenti": 34, "charge_dqdv": 34, "charge_filt": [7, 42], "charge_numb": 21, "charge_ocv": 4, "charge_result": 7, "charge_soc": 4, "chargeordischarg": [1, 21, 44], "chargeordischarge_numb": 21, "check": [11, 12, 21, 23, 30, 31, 42], "check_and_set_nam": [1, 12], "check_required_column": [1, 23], "checkout": 48, "chemistri": [34, 35, 36, 37, 39, 40, 42, 46], "chen": 41, "chen2020": 41, "chg": [19, 47], "choos": [34, 46, 52], "chrono": [14, 15, 18], "circuit": [4, 7, 41], "class": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 31, 38, 40, 43, 44, 45, 47, 50, 53], "classmethod": 25, "clean": 30, "clean_copi": [1, 25, 30], "clearer": 42, "clearli": [30, 37], "clone": [33, 48], "code": [7, 30, 33, 48], "coeffici": [5, 8], "collect": [28, 46], "color": [12, 22, 34, 35, 36, 37, 39, 40, 41, 42], "color_bi": 22, "color_bound": 22, "colorbar": 22, "colormap": 22, "colorscal": 22, "column": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 25, 27, 29, 30, 31, 35, 36, 40, 42, 44, 45, 46, 51, 53], "column_definit": [1, 21, 23, 25, 30, 40], "column_dict": [12, 13, 14, 15, 16, 17, 18, 19, 29], "column_list": [1, 25, 37], "column_nam": 25, "com": [5, 8, 33, 48], "come": [6, 42], "comma": 52, "command": [31, 40, 48, 49], "comment": [34, 37, 39, 40, 41, 42], "commit": 33, "compar": [31, 37, 38], "compat": [30, 49], "complet": [29, 41, 48, 53], "comput": [10, 30, 34, 36, 45], "concat": 36, "concaten": 29, "conda": [33, 48], "condit": 21, "conduct": [11, 30, 41], "confirm": 36, "consid": [8, 21, 39, 52], "constant": [8, 21, 39], "constant_curr": [1, 21, 34, 39, 42], "constant_current_numb": 21, "constant_voltag": [1, 21, 39], "constant_voltage_numb": 21, "construct": [30, 31, 39], "consum": 52, "contain": [4, 5, 7, 8, 9, 10, 12, 15, 21, 22, 23, 25, 30, 39, 41, 42, 44, 45, 46, 49, 52], "contains_lazyfram": [1, 25], "content": 29, "continu": [22, 49], "contribut": [31, 32, 43, 45], "control": 48, "convers": [27, 29, 34, 36, 47], "convert": [12, 21, 27, 29, 38, 44, 47, 51], "copi": [25, 29, 30], "correct": [17, 31, 42], "correctli": 31, "correspond": [23, 27, 46, 47, 52], "coulomb": 40, "count": [5, 21, 39, 40, 44, 52], "cover": 36, "crate": [14, 15, 18], "creat": [20, 21, 22, 25, 27, 30, 33, 34, 35, 36, 37, 39, 40, 42, 45, 46, 48, 50, 53], "critic": 31, "csv": [21, 36, 46, 47], "csv_time": 36, "csv_time_panda": 36, "cumbersom": 52, "cumsum": 36, "cumul": 36, "cumulative_tim": 36, "current": [9, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 29, 36, 39, 40, 42, 44, 45, 47], "current_ma": [40, 44], "curv": [4, 7, 10, 34, 37, 41, 42], "custom": 31, "customiz": 53, "cv": [39, 52], "cv_hold": 39, "cycl": [0, 1, 2, 7, 8, 11, 12, 21, 23, 25, 26, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 50, 52], "cycle_3": 39, "cycle_incr": 36, "cycle_info": [1, 21, 40, 42], "cycle_numb": 21, "cycle_rep": 36, "cycler": [0, 1, 12, 32, 34, 35, 36, 37, 39, 40, 42, 51, 52], "cycler_fil": 46, "cycler_file_": 46, "cycler_file_1": 46, "cycler_file_2": 46, "d": [14, 18, 30, 34, 37, 41], "dai": 36, "dash": [22, 37, 41], "dashboard": [0, 1, 40, 48], "dashdot": 22, "data": [1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 29, 30, 31, 34, 36, 38, 41, 42, 45, 48, 49, 50, 51, 52], "data_directori": [34, 35, 36, 37, 39, 40, 42], "data_list": 25, "datafram": [15, 16, 17, 18, 19, 21, 22, 23, 25, 29, 30, 31, 36, 40, 41, 42, 44], "dataframe_list": [15, 17], "datapoint": 8, "dataset": [34, 36, 37, 39, 42, 46], "datatyp": 47, "date": [13, 14, 15, 16, 17, 18, 19, 21, 25, 29, 40, 46, 47], "date_column_nam": [21, 25], "datetim": [21, 40, 46, 47], "datetime_format": [13, 14, 15, 16, 17, 18, 19], "dchg": [19, 47], "dchg_before_chg": 6, "deal": 42, "declar": [29, 30], "decreas": [15, 21, 47], "deeper": 42, "def": [30, 36, 41, 46], "default": [6, 7, 8, 10, 12, 19, 21, 23, 27, 30, 34, 46, 47], "default_layout": [1, 22], "default_tim": 36, "defin": [3, 15, 23, 25, 29, 30, 35, 41, 42, 46, 52], "define_column": [1, 25], "definit": [23, 25, 30], "degrad": [4, 7, 30, 36, 37, 41, 45, 46], "degradation_mode_analysi": [1, 2, 41, 42], "degradation_mode_analysis_funct": [2, 3, 30], "delai": 36, "delta": [5, 8, 23], "demonstr": [31, 35, 36, 42], "depend": [8, 32, 33, 45, 48], "deriv": 10, "describ": [8, 25, 30, 37, 40, 46, 49, 52], "descript": [23, 39, 40, 46, 52], "design": [44, 45], "desir": [10, 48], "desktop": 48, "detail": [21, 46, 52, 53], "dev": [33, 42], "develop": [33, 34, 41, 43, 45, 49], "df": [17, 36], "diagnosi": [5, 8, 34, 37], "dict": [12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 42, 46], "dictionari": [12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 30, 40, 42, 44, 46, 49, 53], "diff": 34, "differ": [8, 30, 37, 40, 46, 52], "differenti": [1, 2, 5, 30, 38, 41], "differential_evolut": 7, "differentiate_fd": [2, 8, 30, 37], "differentiate_lean": [2, 8, 34, 37], "differentiation_funct": [2, 3], "differentiation_object": 37, "dimension": 44, "direct": [30, 45], "directli": [44, 48], "directori": [12, 33, 46, 48], "discharg": [1, 4, 6, 7, 14, 15, 17, 18, 19, 21, 29, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 52], "discharge_capac": [4, 13, 15, 18, 19], "discharge_curr": 4, "discharge_differenti": [34, 37], "discharge_dqdv": 34, "discharge_filt": [7, 42], "discharge_numb": 21, "discharge_ocv": 4, "discharge_pocv": 45, "discharge_result": [7, 42], "discharge_soc": 4, "discret": [5, 8, 22, 34, 37], "displai": [20, 40, 49, 50], "distinguish": [46, 53], "dma": [1, 2, 4, 7, 30, 41, 42, 45], "dma_object": [41, 45], "dma_result": [2, 7, 30], "do": [29, 31, 46, 48], "doc": [40, 49], "document": [14, 15, 18, 30, 34, 37, 39, 40, 41, 42, 45, 50, 51, 52], "doe": [29, 46], "doesn": 35, "doi": [5, 7, 8, 34, 37, 41], "done": [29, 30, 33, 46], "dongsheng": [5, 8], "dot": 22, "down": 39, "dpt": [18, 47], "dqdv": [7, 41], "dropdown": 48, "dsocdv": 41, "dt": 34, "dtype": [4, 11], "due": [36, 37], "dva": 37, "dvdq": 7, "dx": 8, "dxdy": [5, 8, 30, 34, 37], "dy": [5, 8], "dydx": [5, 8, 30, 37], "e": [12, 22, 29, 33, 41, 44, 46, 47, 52], "each": [7, 9, 29, 30, 46, 52], "easi": [30, 46, 49], "easiest": 48, "easili": [30, 37], "ecel": [17, 29, 47], "edit": [33, 48], "effect": 37, "effici": 40, "either": [5, 8, 19, 23, 30, 33, 44], "elaps": [40, 47], "electrochem": 41, "electrod": [4, 7, 30, 41], "elif": 30, "els": 30, "enabl": 52, "encourag": [30, 42], "end": [21, 29, 31, 39, 52], "enough": 30, "ensur": [29, 30, 42], "enter": [33, 48], "entir": 39, "environ": [33, 40, 48], "error": [31, 42, 45, 52], "et": [5, 8, 34, 37], "etc": [30, 44, 46], "etran": [5, 8, 34, 37], "etransport": [5, 8, 34, 37], "evalu": [8, 9, 31, 35], "evenli": 8, "event": [13, 15, 21, 23, 36, 40, 42, 47], "event_incr": 36, "event_rep": 36, "everi": [25, 44], "exampl": [8, 29, 30, 31, 33, 34, 35, 36, 37, 39, 41, 42, 43, 45, 46, 48, 52, 53], "excel": [12, 21, 46, 53], "except": 36, "execut": [31, 36], "exist": [19, 25, 29, 30, 40, 42, 45], "exp": 41, "experi": [0, 1, 6, 7, 8, 9, 11, 12, 21, 23, 24, 26, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 50, 51, 52], "experiment": [5, 8, 10, 21, 30, 37, 41, 44, 45, 46, 49, 52, 53], "experiment_fold": 46, "experiment_nam": [1, 12, 21, 35], "experiment_object": 42, "experiment_record": 46, "experimentorcycletyp": [0, 1, 21, 26], "explor": [37, 43], "expr": [15, 18, 19, 21, 27], "express": [15, 18, 19, 21, 27, 31], "extens": [29, 52], "extern": 21, "extract": [29, 35, 39], "f": [14, 30, 36, 46], "f64": [35, 40, 41], "factor": [27, 36], "fals": [10, 25, 36], "familiar": 44, "faster": 36, "fastest": 46, "fb": 41, "feng": [5, 8, 34, 37], "fetch": 48, "few": 36, "ff00ff": 40, "field": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 30, 40, 45, 46], "fig": [1, 22, 34, 35, 36, 37, 39, 41, 42], "figsiz": 36, "figur": [22, 36, 40, 41], "file": [12, 15, 16, 17, 18, 19, 21, 24, 29, 36, 39, 40, 42, 44, 47, 51, 53], "filenam": [12, 34, 35, 36, 37, 39, 40, 42, 46], "filename_funct": 12, "filename_input": [12, 46], "filepath": [15, 16, 17, 18, 19, 21], "fill": [25, 46], "fillna": 36, "filter": [0, 1, 8, 10, 12, 23, 25, 26, 31, 34, 35, 36, 38, 40, 42, 45, 46, 47, 49, 51, 52], "filtering_column_nam": 25, "filtertocycletyp": [0, 1, 21, 26, 42], "filtertoexperimenttyp": [0, 1, 21, 26], "filtertosteptyp": [0, 1, 26], "final": [31, 35, 36], "final_cycl": [34, 37], "finit": [8, 30, 37], "first": [9, 18, 21, 23, 25, 30, 34, 35, 37, 40, 44, 46, 50, 52], "fit": [4, 7, 10, 30, 38], "fit_ocv": [2, 7, 30, 41, 45], "fitted_curv": 41, "fitted_ocv": [2, 7, 30], "fitting_target": [4, 7, 41], "fitting_target_data": 4, "fix": 23, "flag": 33, "flatten": 28, "flatten_list": [0, 1, 28], "float": [4, 5, 8, 9, 10, 12, 21, 22, 23, 25, 27, 30], "float64": [4, 5, 7, 11, 22, 25, 47], "flowchart": 49, "fly": 34, "folder": [12, 46], "folder_path": [12, 34, 35, 36, 37, 39, 40, 42, 46], "follow": [17, 29, 30, 31, 33, 42, 46, 47, 48, 49, 52, 53], "font": 22, "fontsiz": 36, "fork": 33, "form": [29, 30], "format": [12, 14, 15, 16, 17, 18, 19, 21, 23, 29, 30, 36, 38, 42, 48, 51], "found": 31, "frac": 8, "framework": 31, "from": [7, 9, 10, 11, 12, 15, 17, 18, 19, 21, 24, 25, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 47, 48, 49, 51, 52], "from_default_unit": [1, 27], "full": [4, 7, 35, 41, 44], "full_procedur": 39, "function": [3, 4, 5, 7, 8, 12, 13, 20, 22, 24, 28, 29, 30, 37, 39, 42, 45, 46], "further": [23, 30, 39, 40, 42, 45, 49], "g": [12, 22, 29, 46], "gastol": 41, "gener": [12, 22, 41, 45, 46, 47, 49, 52], "get": [1, 5, 25, 34, 36, 38, 42, 43, 44, 48], "get_cycle_column": [0, 1, 21], "get_dx": [2, 3, 5], "get_dy_and_count": [2, 3, 5], "get_imported_datafram": [13, 15, 17, 29], "get_onli": [1, 25], "get_x_sect": [2, 3, 5], "git": [33, 48], "github": [33, 48], "gitt": 38, "give": [12, 30, 37], "given": [46, 52], "go": [22, 29, 34, 35, 37, 41], "golai": 10, "good": [30, 48], "gradient": [5, 8, 10, 30, 34, 37], "gradient_data": 30, "gradient_result": 30, "gradient_titl": 30, "graphit": 41, "graphite_lgm50_ocp_chen2020": 41, "green": [37, 39], "gregori": [5, 8], "gt": [36, 40, 42], "guess": [4, 7], "guid": [29, 43, 45, 49], "guidanc": [46, 51], "h": [14, 27], "ha": [25, 30, 34, 36, 37, 40, 41, 42, 44, 46, 48, 50], "half": [4, 7, 41], "han": [5, 8], "hand": 36, "happen": 42, "have": [12, 21, 29, 30, 44, 45, 46, 48], "he": [5, 8, 34, 37], "head": 29, "header": [29, 47], "health": 6, "height": 22, "hello": 48, "help": [30, 42, 53], "here": 30, "high": 41, "highest": [4, 30], "highli": 52, "hint": 26, "hold": [23, 25, 39, 40, 44, 52], "hook": 33, "hostedtoolcach": 42, "hour": [39, 40, 42, 47, 52], "how": [34, 42, 43, 49], "howev": [29, 30, 34, 35, 42], "hr": [27, 34, 35, 37], "html": 49, "http": [5, 8, 33, 34, 37, 41, 42, 48], "huang": [5, 8], "human": 52, "i": [5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 21, 23, 25, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53], "i64": 40, "ica": 37, "identifi": [15, 18, 19, 21, 36, 42, 46, 47, 52], "illustr": 36, "imag": 22, "immedi": 40, "imperialcollegelondon": [7, 33, 48], "implement": [36, 45], "import": [12, 13, 15, 17, 21, 29, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 48, 51, 52], "import_and_validate_data": [13, 14, 15, 16, 17, 18, 19], "import_pybamm_solut": [1, 12], "importing_column": 21, "includ": [8, 9, 12, 25, 29, 30, 35, 44, 46, 47, 52, 53], "inclus": [21, 39, 52], "incorrect": 45, "incorrect_data_dict": 42, "incorrect_datafram": 42, "increas": [15, 17, 36, 47, 52], "increment": [36, 37], "index": [14, 19, 25, 29, 39, 44, 47, 49, 52], "indic": [12, 14, 15, 16, 17, 18, 19, 21, 25, 29, 44], "individu": [35, 40, 44], "info": [1, 12, 21, 23, 25, 30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 49, 53], "info_dictionari": [34, 35, 36, 37, 39, 40, 42, 46], "inform": [12, 14, 15, 18, 21, 25, 27, 30, 42, 46, 52, 53], "inherit": [29, 30, 31, 42], "initi": [4, 7, 35, 36, 39, 40, 52], "initial_charg": 39, "initialis": 48, "inlin": 36, "inner": [21, 52], "input": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 30, 31, 38, 41, 49, 51], "input_data": [2, 6, 7, 8, 9, 10, 11, 23, 30, 34, 35, 37, 40, 41, 42, 45], "input_data_path": [13, 14, 15, 16, 17, 18, 19, 29], "input_filenam": [12, 36, 40, 46], "input_name_gener": 46, "input_quant": 27, "input_typ": 42, "input_unit": 27, "input_valu": 42, "insid": [30, 33], "instal": [32, 51], "instanc": [11, 27, 30, 35, 42, 45, 46, 50, 52], "instanti": 45, "instead": [30, 34, 36, 52], "instruct": [35, 39, 47, 48, 52], "int": [5, 8, 9, 10, 12, 21, 23, 24, 25, 36], "int64": 47, "integ": [5, 8, 10], "integr": 45, "intens": 36, "interact": [30, 31, 34, 37, 39, 40, 41, 42], "interfac": 44, "intern": 45, "interpol": [21, 25, 46], "interpret": [21, 46], "interv": [5, 8, 10, 37], "introduct": [43, 51], "inventori": [4, 30, 41], "ion": 41, "is_instance_of": 42, "isin": 36, "its": [29, 30, 36, 39, 46, 52], "itself": 30, "j": [5, 8, 34, 37], "jin": [5, 8], "join": 25, "journal": 41, "jupyt": 48, "just": [8, 29, 52], "k": [5, 8, 27, 34, 37, 41], "keep": [30, 53], "kei": [9, 12, 21, 25, 35, 40, 41, 46, 53], "kendrick": 41, "keyword": [46, 52], "kirkaldi": 7, "know": 42, "label": [22, 34, 35, 36, 37, 39, 41, 42], "lam_n": [4, 7], "lam_p": [4, 7], "languag": [39, 44], "languang": [5, 8], "larg": [29, 36], "last": [21, 34, 36, 37, 42, 52], "later": [30, 33, 48], "launch": [20, 40, 48], "launch_dashboard": [0, 1, 20, 40], "layout": [22, 36], "laz": 42, "lazi": [31, 36], "lazyfram": [15, 16, 17, 18, 19, 21, 23, 25, 31, 40, 42], "lean": [8, 37, 38], "lean_dqdv": 37, "learn": 43, "least": 7, "legend": [22, 36], "len": 36, "length": [10, 21, 36], "lenient": 30, "less": 44, "level": [8, 37], "level_smooothed_data": 37, "level_smooth": [2, 10, 37], "level_smoothed_data_dvdq": 37, "li": [5, 8, 41], "li_inventori": [4, 30], "liaw": [5, 8, 34, 37], "lib": 42, "librari": [35, 36], "life": [7, 46], "light": [8, 30], "like": [29, 31, 39, 42, 46, 47], "limit": [4, 7, 30, 41, 52], "line": [16, 22, 42, 47, 48, 50, 52], "linestyl": 36, "linspac": 41, "linux": 48, "list": [5, 8, 9, 11, 12, 15, 17, 20, 21, 22, 23, 24, 25, 28, 29, 35, 39, 46, 48, 52, 53], "lithium": [4, 30, 41], "littl": 30, "liu": [5, 8], "ll": 35, "lli": [4, 7], "load": [12, 14, 15, 16, 17, 18, 19, 21, 23, 29, 40], "load_arch": [0, 1, 12], "load_external_fil": [1, 21], "loc": 36, "local": [33, 40, 48, 49], "log": 36, "log_scal": 36, "longest": [8, 34], "look": [34, 37, 47, 52], "loop": [6, 39, 52], "low": 41, "lowest": [4, 30], "lst": 28, "lt": [36, 40, 42], "lu": [5, 8], "m": [14, 18, 27, 33, 34, 37, 48], "ma": [39, 40, 44, 52], "mac": 48, "maccor": [1, 13, 47], "machin": [33, 48], "made": 36, "mah": 34, "mai": [12, 29, 30, 42, 45, 46], "main": [25, 31, 33, 39, 42, 46, 49], "make": [12, 29, 33, 43, 49, 51], "make_boxplot": 36, "make_cell_list": [0, 1, 12, 46], "make_colorscal": [1, 22], "manag": 48, "manipul": [30, 31], "manual": 36, "manufactur": 46, "map": [12, 14, 15, 16, 17, 18, 19], "mark": 47, "marker": 36, "match": [27, 36, 46], "mathemat": 30, "matplotlib": [36, 41], "matrix": 8, "max": 36, "maximum": [17, 21, 23], "mb": 17, "mean": [31, 33, 39, 46], "measur": [36, 47], "measure_panda": 36, "measure_pyprob": 36, "median": [9, 36], "median_total_time_idx_panda": 36, "median_total_time_idx_pyprob": 36, "median_total_time_panda": 36, "median_total_time_pyprob": 36, "mengchao": [5, 8], "menu": 48, "merla": [5, 8, 34, 37], "metadata": 49, "method": [2, 7, 8, 10, 12, 17, 21, 23, 25, 29, 31, 32, 34, 35, 36, 37, 40, 41, 42, 44, 45, 46, 49], "method_paramet": 45, "metric": 35, "midpoint": 5, "might": [31, 47], "min": 27, "minggao": [5, 8], "minim": 7, "minimum": 10, "minut": [39, 40, 52], "miss": [11, 25, 42], "mode": [4, 7, 30, 33, 41, 45], "model": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 31, 41, 46], "model_typ": 42, "modifi": 29, "modul": [0, 1, 2, 3, 13, 29, 31, 32, 40, 42, 43, 44, 45, 49, 50], "modulo": [12, 17, 46, 47], "modulobat": 29, "monoton": [10, 17, 37], "more": [14, 15, 18, 25, 30, 42, 44, 46], "most": [29, 30, 31, 36, 42, 52], "mpt": [46, 47], "much": [36, 42], "multi": 41, "multipl": [5, 8, 12, 29, 30, 31, 34, 36, 37, 40, 44, 51, 52, 53], "must": [10, 12, 21, 25, 30, 33, 35, 36, 40, 42, 45, 46, 48, 52], "n": [17, 27, 29, 33, 44, 47, 48], "n_pt": 41, "n_repeat": 36, "name": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 30, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 52, 53], "natur": [39, 44], "navig": 49, "ndarrai": [4, 5, 7, 11, 22, 25, 30, 40], "ne_capac": [4, 30], "ne_stoich_limit": 4, "neccessari": 30, "necessari": 41, "need": [29, 30, 36, 45, 48, 53], "neg": [18, 19, 41], "nest": [21, 52], "net": [23, 40], "never": 42, "new": [23, 25, 29, 36, 48], "new_column_definit": 23, "new_column_nam": 23, "new_data": 25, "newar": [1, 12, 13, 14, 18, 34, 35, 36, 37, 39, 40, 42, 46, 47, 52], "niall": 7, "nmc": 41, "nmc622": [34, 35, 36, 37, 39, 40, 42, 46], "nmc_lgm50_ocp_chen2020": 41, "nois": 37, "noisi": [8, 10], "nomin": [34, 35, 36, 37, 39, 40, 42, 46], "none": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 30, 42], "normal": [36, 40, 41, 42, 46], "notat": 44, "note": 29, "notebook": 48, "notic": 42, "now": [36, 37, 41, 42], "np": [4, 5, 7, 11, 22, 25, 30, 34, 36, 37, 39, 41], "null": 40, "number": [9, 12, 15, 17, 21, 23, 29, 30, 34, 35, 36, 37, 39, 40, 41, 42, 44, 46, 47, 52], "numer": [21, 44], "numpi": [8, 25, 30, 34, 36, 37, 39, 40, 41, 44], "o": [36, 41], "object": [6, 7, 8, 9, 10, 12, 20, 21, 22, 23, 24, 25, 27, 30, 34, 35, 37, 39, 40, 41, 42, 45, 49, 50, 51], "ocp": [4, 7, 41], "ocp_n": [4, 7, 41, 45], "ocp_p": [4, 7, 41, 45], "ocv": [4, 7, 9, 30, 34, 35, 37, 38, 42, 45], "ocv_curve_fit": [2, 3, 4], "ocv_result": 41, "odd": 10, "offer": [5, 8, 37], "often": 30, "ohm": [9, 27, 35], "omit": 42, "onc": [29, 36, 40, 45, 46, 47, 49], "one": [25, 29, 36, 42, 44, 48, 52], "onli": [29, 30, 31, 34, 35, 36, 42, 46, 53], "open": [4, 7, 39, 41, 48, 49], "opt": 42, "optim": [4, 7, 36], "option": [7, 8, 10, 12, 18, 19, 21, 23, 24, 25, 30, 34], "optional_vari": 12, "order": [10, 46, 48], "org": [5, 8, 34, 37, 41], "origin": [36, 40], "other": [12, 23, 30, 42, 45, 50], "otherwis": 25, "our": [35, 36, 41], "out": [34, 35, 37, 39, 40, 41, 42, 52], "outer": [21, 52], "output": 46, "output_data_path": 12, "output_filenam": [12, 36, 40, 46], "output_name_gener": 46, "outsid": [40, 42], "ouyang": [5, 8, 34, 37], "overal": 36, "overhead": 36, "overrid": 29, "own": [29, 30, 33, 39, 46, 52], "p": [18, 27], "packag": [0, 30, 33, 34, 37, 42, 48], "pair": 46, "panda": 36, "pandas_tim": 36, "pandas_voltag": 36, "paper": [5, 8], "paramet": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 35, 45], "parameter": 41, "parametr": 46, "parquet": [12, 21, 34, 35, 36, 37, 39, 40, 42, 46], "pars": 29, "part": [40, 45, 52], "particular": [42, 49], "particularli": 52, "pass": [23, 30, 40, 44, 45, 47], "patch_artist": 36, "patel": [5, 8], "path": [12, 14, 15, 16, 17, 18, 19, 21, 24, 33, 46, 48], "pattern": [27, 46], "pd": 36, "pe_capac": [4, 30], "pe_stoich_limit": 4, "peng": [5, 8], "perform": [21, 29, 30, 31, 38, 42, 45, 46], "period": [34, 36], "perman": 23, "pii": [5, 8], "ping": [5, 8], "pip": [33, 48], "pl": [15, 16, 17, 18, 19, 21, 23, 25, 27, 30, 36, 41, 42], "place": 48, "planella": 41, "plot": [0, 1, 31, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 49, 51, 53], "plotli": [22, 50], "plt": [36, 41], "pocv": [42, 45], "pocv_cycl": 42, "point": [8, 9, 10, 22, 30, 35, 40], "polar": [15, 18, 19, 21, 25, 32, 36, 41, 42, 44, 47], "polynomi": 10, "polynomial_ord": 10, "polyord": 10, "poor": 37, "popul": [30, 46], "popular": [36, 37, 48], "portabl": 30, "posit": [10, 18, 19, 41], "possibl": [30, 44], "potenti": [4, 7], "power": 39, "pre": 33, "prefix": 27, "prefix_dict": [1, 27], "preprocess": [20, 51], "presenc": 23, "present": [11, 12, 14, 15, 18, 23], "prevent": 42, "previou": [17, 39, 52], "previous": 46, "principl": 31, "print": [25, 31, 34, 35, 36, 37, 39, 40, 41, 42, 46], "print_definit": [1, 25], "prior": 37, "problem": 42, "procedur": [0, 1, 6, 7, 8, 9, 11, 12, 21, 26, 34, 35, 36, 37, 39, 40, 42, 44, 45, 46, 49, 50, 52], "procedure_nam": [12, 34, 35, 36, 37, 39, 40, 42, 46], "process": [14, 15, 16, 17, 18, 19, 24, 29, 30, 36, 44, 46, 47, 48, 49], "process_cycler_fil": [1, 12, 36, 40, 46], "process_generic_fil": [1, 12], "process_readm": [0, 1, 24], "processed_cycler_fil": 46, "processed_cycler_file_": 46, "processed_cycler_file_cycl": 46, "processed_cycler_file_rpt": 46, "produc": [12, 41, 49], "program": 47, "prompt": 48, "properti": [11, 15, 18, 19, 21, 22, 23, 25, 29, 40], "protocol": 46, "provid": [7, 8, 9, 12, 21, 23, 25, 30, 31, 35, 38, 39, 40, 45, 46, 47, 52], "pseudo": [34, 37, 45], "puls": [1, 2, 34, 35, 39, 40, 52], "pulse_numb": 9, "pulse_object": 35, "pulse_rest": [2, 9, 34], "pulse_summari": [2, 9, 35], "pulsing_experi": 35, "purpl": [39, 42], "purpos": 52, "put": 41, "py": 42, "pybamm": [12, 23, 24, 39, 52], "pybamm_experi": [1, 23], "pybamm_solut": 12, "pydant": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 29, 30, 32, 42], "pyplot": [36, 41], "pyprb": 24, "pyprob": [29, 30, 31, 33, 34, 35, 37, 38, 39, 41, 42, 44, 45, 48, 50, 51, 53], "pyprobe_datafram": [13, 15], "pyprobe_tim": 36, "pyprobe_voltag": 36, "pyprobedatatyp": [0, 1, 26, 30], "pyproberawdatatyp": [0, 1, 26], "pytest": 42, "python": [33, 39, 42, 44, 48], "python3": 42, "q": [17, 29, 47], "quantifi": 7, "quantify_degradation_mod": [2, 7, 30], "quantiti": [1, 25, 27, 50], "queri": 36, "quickli": [39, 40], "r": [5, 8, 33, 39, 48], "r0": [9, 35], "r_10": 35, "r_time": [9, 35], "rais": [5, 11, 25, 30], "rang": [21, 22, 36, 41], "rate": 8, "raw": [26, 37, 40], "raw_data_dvdq": 37, "rawdata": [0, 1, 7, 8, 11, 21, 26, 31, 38, 47, 50, 51], "re": [29, 34, 36, 37], "read": [12, 15, 16, 17, 18, 19, 29, 30, 36, 39, 45], "read_csv": 36, "read_fil": [13, 15, 16, 17, 18, 19, 29], "read_parquet": 36, "readabl": [30, 52], "reader": 46, "readm": [12, 21, 24, 39, 44, 46, 51], "readme_dict": [1, 21, 24, 40], "readme_nam": 12, "readme_path": 24, "readme_processor": [0, 1], "readmemodel": [0, 1, 24], "real": 52, "reason": 35, "recent": 42, "recogn": 29, "recommend": [33, 48, 52], "record": [12, 46, 51], "record_filepath": [12, 46], "red": [34, 35, 36, 37, 39, 41, 42], "reduc": 29, "refer": [5, 7, 8, 23, 35, 46], "referenc": 23, "reference_capac": 23, "reference_charg": [23, 35], "reference_stoichiometry_limit": 7, "reflect": [12, 33], "regan": 41, "regular": 27, "regular_express": 27, "rel": [23, 47], "relat": [29, 53], "releas": [7, 48, 49], "reliabl": [5, 8, 34, 37], "remain": [23, 30], "remov": [18, 19, 21, 25, 36, 37], "remove_experi": [1, 21], "ren": [5, 8], "renam": 21, "rep_csv_time_panda": 36, "rep_median_total_time_idx_panda": 36, "rep_median_total_time_idx_pyprob": 36, "rep_median_total_time_panda": 36, "rep_median_total_time_pyprob": 36, "rep_pandas_tim": 36, "rep_pandas_voltag": 36, "rep_pyprobe_tim": 36, "rep_pyprobe_voltag": 36, "rep_total_time_panda": 36, "rep_total_time_pyprob": 36, "repeat": [36, 47, 52], "repeated_data": 36, "replac": [30, 36], "repositori": [30, 33, 48, 49], "repres": [5, 21], "request": [31, 36], "requir": [6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 29, 30, 33, 35, 36, 40, 42, 45, 46, 47, 48, 53], "required_column": [2, 11, 30, 42], "required_typ": [2, 11, 30, 42], "resampl": 10, "reset": 44, "resist": [9, 27, 35], "respect": 10, "rest": [1, 9, 21, 30, 34, 39, 40, 44, 52], "rest_0": 39, "rest_1": 39, "rest_numb": [9, 21], "result": [0, 1, 6, 7, 8, 9, 10, 11, 22, 23, 26, 30, 31, 35, 36, 37, 40, 41, 42, 44, 45, 49, 50], "retriev": [30, 36, 39, 44], "return": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 36, 40, 41, 42, 44, 45, 46], "rig": 12, "right": 36, "root_fold": 46, "rpt": 46, "ruih": [5, 8], "run": [12, 33, 36, 40, 46, 48, 49, 53], "s2590116820300084": [5, 8], "sake": [34, 37, 39, 40, 41, 42], "same": [10, 12, 23, 29, 36, 46, 52], "sampl": [5, 8, 10, 34, 35, 36, 37, 39, 40, 42, 46], "sample_data": [34, 35, 36, 37, 39, 40, 42], "sample_data_newar": [34, 35, 36, 37, 39, 40, 42], "sample_data_neware_rep": 36, "santhanagopalan": [5, 8], "save": [30, 36, 46], "savgol_smooth": [2, 10], "savitzki": 10, "scalabl": 36, "scale": [22, 41], "scene": [31, 42], "scienc": [5, 8], "sciencedirect": [5, 8], "scipi": 7, "script": [20, 48], "sec": [18, 47], "second": [9, 25, 36, 39, 40, 41, 46, 48, 50, 52], "secondari": 22, "secondary_i": 22, "section": [5, 8, 23, 34, 39, 40, 45, 46, 47, 49, 52], "see": [14, 15, 18, 42, 43, 45, 46, 50], "select": [36, 39, 44, 45, 48], "self": [30, 42], "self_inst": 42, "separ": [35, 39, 48, 52], "seper": [25, 39, 52], "seri": [25, 46], "serial": 52, "set": [7, 12, 23, 29, 31, 33, 34, 36, 41, 42], "set_reference_capac": [1, 23], "set_soc": [1, 23, 35, 42], "set_titl": 36, "set_vis": 36, "set_ylabel": 36, "set_yscal": 36, "setup": [32, 53], "shape": [35, 36, 40, 41, 42], "sharei": 36, "shift": 36, "shortcut": 51, "should": [29, 30, 42, 48, 52], "show": [1, 22, 34, 36, 37, 39, 40, 41, 42, 50], "show_imag": [1, 22, 34, 35, 37, 39, 40, 41, 42], "showflier": 36, "showlegend": 22, "shriram": [5, 8], "si": 27, "simpl": [30, 41, 44, 45], "simplest": 29, "simpli": [3, 29, 30, 44], "sinc": 40, "singl": [12, 15, 18, 19, 25, 28, 46, 47, 52], "site": 42, "size": [5, 8, 22], "skip": [39, 52], "slice": 5, "smooth": [1, 2, 5, 8, 30, 37], "smooth_gradi": [2, 3, 5], "smoother": 37, "smoothing_filt": 8, "smoothing_lambda": [10, 37], "so": [17, 23, 30, 31, 34, 36, 37, 39, 40, 42, 44, 46, 52], "soc": [4, 9, 23, 30, 35, 41, 42], "societi": 41, "softwar": 48, "soh": [4, 6, 7, 40], "solid": 22, "solut": 12, "some": [29, 30, 39, 40, 42, 46, 52], "someth": 46, "sometim": 29, "sourc": [21, 29, 33, 46, 48], "space": [5, 8, 34], "special": 44, "specif": [23, 29, 42, 45, 49], "specifi": [10, 23, 25, 30, 44], "speed": [36, 46], "spline": [10, 37], "spline_smooth": [2, 10, 37], "spline_smoothed_data": 37, "spline_smoothed_data_dvdq": 37, "split": [5, 39], "stabl": 48, "stage": 49, "standard": [23, 29, 30, 38, 42, 46, 47], "start": [21, 29, 30, 34, 38, 39, 42, 47, 48, 52], "start_tim": 36, "state": [6, 35, 37], "static": [7, 15, 16, 17, 18, 19, 22], "statist": 9, "step": [0, 1, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 29, 30, 33, 36, 39, 40, 41, 42, 44, 46, 47, 48, 52], "step_descript": [1, 21, 23, 40], "step_incr": 36, "step_numb": 21, "step_rep": 36, "still": 39, "sto": 41, "stoichiometri": [4, 7, 30, 41], "stoichiometry_limit": [2, 7, 30, 41, 45], "storag": 31, "store": [25, 27, 30, 39, 42, 46, 47, 49, 52], "str": [4, 5, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 27, 29, 30, 36], "streamlit": [20, 48], "strength": 39, "strict": 30, "stricter": [23, 30, 42], "string": [12, 14, 15, 18, 29, 39, 44, 46, 52], "structur": [51, 52], "studio": 48, "style": 22, "subclass": 23, "submodul": [0, 30], "subpackag": 0, "subplot": 36, "subsequ": 21, "summari": [2, 6, 9, 35, 40], "summaris": [9, 47, 49], "support": [21, 46, 48, 51], "syntax": 52, "synthet": 41, "t": [35, 36, 42], "t1": [16, 19, 47], "tabl": 47, "tag": 48, "take": [18, 35], "taken": 47, "tanh": 41, "target": [4, 7, 10], "target_column": [10, 37], "techniqu": 41, "tell": 42, "temp": [18, 47], "temperatur": [13, 14, 15, 16, 17, 18, 19, 27, 29, 40, 47], "templat": 22, "tempt": 30, "termin": [40, 48], "test": [12, 14, 18, 25, 34, 35, 36, 37, 39, 40, 42, 46, 47, 52], "test_csv": 36, "testabl": 30, "text": 41, "than": [23, 30, 36, 42, 44], "thei": [12, 17, 30, 40, 42, 46], "them": [21, 29, 39, 42, 43, 45, 46], "therefor": [42, 44, 52], "thi": [8, 12, 17, 18, 19, 21, 23, 25, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52], "third": [39, 50], "three": 39, "through": [29, 31, 40], "throughout": [31, 46], "throughput": 40, "tick_label": 36, "tickfont": 22, "tight_layout": 36, "time": [9, 10, 13, 14, 15, 16, 17, 18, 19, 21, 23, 25, 27, 29, 34, 35, 36, 37, 39, 40, 42, 46, 47, 50, 52], "time_incr": 36, "time_rep": 36, "time_unit_dict": [1, 27], "timeit": 36, "timeseri": 46, "timestamp": [21, 40, 47], "titl": [22, 24, 39, 52], "title_font_s": [1, 22], "to_default_unit": [1, 27], "togeth": 31, "told": 42, "too": [40, 52], "tool": 42, "top": 30, "total": [19, 52], "total_time_panda": 36, "total_time_pyprob": 36, "traceback": 42, "track": 53, "treat": 52, "true": [6, 10, 22, 25, 36, 37, 42], "try": 42, "tupl": [4, 5, 7, 11, 21, 24, 25, 30], "twice": 47, "two": [7, 34, 39, 41, 46, 48, 52], "txt": [33, 47, 48], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 40, 42, 44, 45, 50], "u": [16, 47], "u32": 35, "u_eq": 41, "uncom": 40, "under": 29, "undergo": 46, "undergon": 46, "underli": 30, "underpin": 30, "unexpect": 42, "unifomli": 8, "uniformli": [5, 34], "union": [25, 42], "uniqu": [36, 47], "unique_cycl": 36, "unique_ev": 36, "unit": [0, 1, 12, 14, 15, 16, 17, 18, 19, 25, 29, 34, 40, 44, 47], "unit_dict": [1, 27], "unit_from_regexp": [0, 1, 27], "unset": 29, "until": [35, 36, 39, 40, 52], "up": [29, 31, 36, 43, 46], "updat": [42, 48], "upon": 23, "upper": 36, "upward": 52, "url": [5, 7, 8], "us": [4, 7, 8, 10, 12, 21, 22, 23, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53], "user": [23, 30, 31, 35, 37, 42, 43, 44, 49, 53], "usual": 46, "util": [0, 1, 2], "v": [9, 12, 23, 27, 34, 35, 36, 37, 39, 40, 41, 42, 44, 47, 50, 52], "v0": 48, "valid": [11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 25, 30, 31, 38, 45], "validate_input_data_typ": [2, 11], "validate_python": 42, "validate_required_column": [2, 11], "validationerror": 42, "valu": [5, 12, 21, 23, 25, 35, 36, 42, 46, 47, 52], "value_error": 42, "valueerror": [5, 11, 25, 30], "variabl": [2, 8, 10, 11, 12, 21, 29, 30], "variant": [42, 44, 45], "vector": [5, 41], "venv": [33, 48], "veri": 29, "verifi": [42, 46], "version": 48, "vert": 36, "viridi": 22, "virtual": [33, 48], "visit": 42, "visual": 48, "visualis": 49, "volt": 47, "voltag": [12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 27, 29, 34, 35, 36, 38, 39, 40, 41, 42, 44, 47, 50], "vscode": [48, 52], "w": 27, "wa": 47, "wai": [23, 30, 39, 46, 48], "wang": [5, 8], "want": 21, "wd": 41, "we": [30, 34, 35, 36, 37, 39, 40, 41, 42], "web": 49, "week": 36, "well": 53, "weng": [5, 8, 34, 37], "were": [42, 47], "when": [12, 18, 19, 23, 25, 29, 30, 31, 34, 35, 40, 42, 44, 45, 46, 47, 52, 53], "whenev": 42, "where": [9, 29, 36, 46, 47, 52], "wherea": 36, "whether": [6, 22, 25], "which": [8, 9, 23, 29, 30, 31, 33, 34, 35, 37, 39, 42, 45, 46, 48, 49, 52, 53], "whichev": 34, "while": [29, 30], "who": 44, "why": 52, "widanag": 41, "width": 22, "wildcard": 46, "window": [10, 48], "window_length": 10, "wish": [33, 45, 48], "with_column": 36, "within": [9, 29, 42, 45, 52], "without": [25, 30], "work": [29, 30, 31, 33, 35, 42, 48, 51], "workflow": 46, "worksheet": 12, "worksheet_nam": [12, 46], "would": 42, "wrapper": [8, 30], "write": [12, 30, 36, 46, 48, 51], "write_parquet": 36, "written": [42, 52], "www": [5, 8], "x": [5, 8, 10, 22, 30, 34, 37, 40, 41, 42, 50], "x64": 42, "x_data": 30, "x_guess": [4, 7, 41, 45], "x_ne": [4, 7, 41, 45], "x_ne_hi": [4, 30, 41], "x_ne_lo": [4, 30, 41], "x_pe": [4, 7, 41, 45], "x_pe_hi": [4, 30, 41], "x_pe_lo": [4, 30, 41], "x_rang": [1, 22], "xaxi": 22, "xiangm": [5, 8], "xlabel": [36, 41], "xlsx": [12, 36, 40, 46, 47], "xtick": 36, "xueb": [5, 8], "xuemin": [5, 8], "xune": [5, 8], "y": [5, 8, 14, 18, 22, 30, 34, 36, 37, 40, 41, 42, 50], "y2_rang": [1, 22], "y_data": 30, "y_rang": [1, 22], "y_sampling_interv": [2, 3, 5], "yaml": [12, 21, 24, 39, 44, 46, 51], "yan": [5, 8], "yann": [5, 8], "yatish": [5, 8], "yaxi": [22, 36], "yaxis_titl": 35, "ye": 47, "year": 36, "yi": [5, 8], "ylabel": [36, 41], "you": [12, 21, 29, 30, 33, 34, 37, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52], "your": [29, 30, 31, 33, 34, 40, 45, 46, 48, 49, 52], "yscale": 36, "ytick": 36, "yu": [5, 8], "z": 41, "zenodo": 7, "zero": [23, 29, 34, 36, 39, 44], "zero_column": [1, 23], "zhao": [5, 8], "zip": 12, "\u00b5": 27, "\u03bc": 40}, "titles": ["pyprobe", "pyprobe package", "pyprobe.analysis package", "pyprobe.analysis.base package", "pyprobe.analysis.base.degradation_mode_analysis_functions module", "pyprobe.analysis.base.differentiation_functions module", "pyprobe.analysis.cycling module", "pyprobe.analysis.degradation_mode_analysis module", "pyprobe.analysis.differentiation module", "pyprobe.analysis.pulsing module", "pyprobe.analysis.smoothing module", "pyprobe.analysis.utils module", "pyprobe.cell module", "pyprobe.cyclers package", "pyprobe.cyclers.arbin module", "pyprobe.cyclers.basecycler module", "pyprobe.cyclers.basytec module", "pyprobe.cyclers.biologic module", "pyprobe.cyclers.maccor module", "pyprobe.cyclers.neware module", "pyprobe.dashboard module", "pyprobe.filters module", "pyprobe.plot module", "pyprobe.rawdata module", "pyprobe.readme_processor module", "pyprobe.result module", "pyprobe.typing module", "pyprobe.units module", "pyprobe.utils module", "Adding a Cycler", "Contributing to the Analysis Module", "Dependency Guide", "Developer Guide", "Installation", "Differentiating with the LEAN algorithm", "Analysing GITT data", "Comparing PyProBE Performance", "Differentiating voltage data", "Examples", "Filtering data", "Getting started with PyProBE", "OCV Fitting", "Providing Valid Inputs", "PyProBE documentation", "Accessing Data", "Analysis", "Importing Data", "Input Data Guidance", "Installation", "Introduction", "Plotting", "User Guide", "Writing a README file", "Writing an Experiment record"], "titleterms": {"The": 52, "access": 44, "ad": [29, 46], "algorithm": 34, "an": 53, "analys": 35, "analysi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 30, 42, 45], "arbin": 14, "base": [3, 4, 5, 30], "basecycl": 15, "basytec": 16, "batch": 46, "biolog": 17, "cell": [12, 46], "class": 42, "column": 47, "compar": 36, "contribut": 30, "convert": [40, 46], "cycl": 6, "cycler": [13, 14, 15, 16, 17, 18, 19, 29, 46, 47], "dashboard": 20, "data": [35, 37, 39, 40, 44, 46, 47], "degradation_mode_analysi": 7, "degradation_mode_analysis_funct": 4, "depend": 31, "develop": 32, "differenti": [8, 34, 37], "differentiation_funct": 5, "document": [43, 49], "exampl": 38, "experi": 53, "file": [46, 52], "filter": [21, 39, 44], "fit": 41, "format": [40, 46, 47, 52], "from": 46, "get": 40, "gitt": 35, "guid": [31, 32, 51], "guidanc": 47, "import": 46, "input": [42, 46, 47], "instal": [33, 48], "introduct": 49, "lean": 34, "maccor": 18, "make": 46, "method": 30, "modul": [4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30], "multipl": 46, "newar": 19, "object": [44, 46], "ocv": 41, "packag": [1, 2, 3, 13], "perform": 36, "plot": [22, 50], "polar": 31, "preprocess": 46, "provid": 42, "puls": 9, "pydant": 31, "pyprob": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 43, 46, 47, 49, 52], "rawdata": [23, 42, 44], "readm": 52, "readme_processor": 24, "record": 53, "result": 25, "setup": 30, "shortcut": 52, "smooth": 10, "standard": 40, "start": 40, "structur": 49, "submodul": [1, 2, 3, 13], "subpackag": [1, 2], "support": 47, "thi": 49, "type": 26, "unit": 27, "user": 51, "util": [11, 28], "valid": 42, "voltag": 37, "work": 46, "write": [52, 53], "yaml": 52}})